# Kogut--Susskind spectrum
# MIMD version 7ish

# Generic make-include file for spectrum codes
# This template file defines rules and macros common to all architectures
# It is intended to be an include file for other Makefiles.
# Don't use it by itself!

# Targets:
#   su3_spectrum

# Features:
#   nHYP smearing

MYINCLUDEDIR = .
INCLUDEDIR = ../include
# Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS =                \
  ${INCLUDEDIR}/config.h        \
  ${INCLUDEDIR}/complex.h       \
  ${INCLUDEDIR}/su3.h           \
  ${INCLUDEDIR}/comdefs.h       \
  ${INCLUDEDIR}/macros.h        \
  ${INCLUDEDIR}/field_alloc.h   \
  ${INCLUDEDIR}/generic.h       \
  ${INCLUDEDIR}/generic_ks.h    \
  ${INCLUDEDIR}/generic_nhyp.h  \
  ${INCLUDEDIR}/loopend.h       \
  ${INCLUDEDIR}/io_lat.h

MY_HEADERS =  \
  lattice.h   \
  params.h    \
  defines.h   \
  spectrum_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS}

# All required object files
# Basic set from current directory
MY_OBJECTS =      \
  control.o       \
  setup.o         \
  gauge_info.o    \
  d_congrad_v6.o  \
  d_congrad_helpers.o

# Basic set from generic directory
G_OBJECTS =         \
  check_unitarity.o \
  d_plaq4.o         \
  io_helpers.o      \
  io_lat4.o         \
  io_lat_utils.o    \
  make_lattice.o    \
  nersc_cksum.o     \
  ranstuff.o        \
  gaugefix2.o       \
  reunitarize2.o    \
  remap_stdio_from_args.o

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS += io_scidac.o io_scidac_types.o
endif

# Basic set from generic_ks directory
G_KS_OBJECTS =  \
  rephase.o     \
  spectrum2.o   \
  nl_spectrum.o \
  fpi_2.o

# Basic set from generic_nhyp directory
G_NHYP_OBJECTS =  \
  nhyp.o          \
  block_nhyp.o    \
  switch.o        \
  scalar_add.o

# Objects depending on architecture and software package

# Selection of layout
ifeq ($(strip ${HAVEQDP}),true)
  LAYOUT = layout_qdp.o # Required
else
  LAYOUT = layout_hyper_prime.o # (layout_squares.o doesn't compile)
endif

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QDP_OBJECTS} ${SCIDAC_OBJECTS}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_KS_OBJECTS} ${G_NHYP_OBJECTS} \
          ${LAYOUT} ${ADD_OBJECTS} ${EXTRA_OBJECTS}

# Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${PRECISION}.a ${LIBDIR}/complex.${PRECISION}.a

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${PRECISION}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES =                   \
  Make_template               \
  ${MAKEFILE}                 \
  ../Make_template_qop        \
  ../Make_template_scidac     \
  ../generic/Make_template    \
  ../generic_ks/Make_template \
  ../generic_nhyp/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

ifeq ($(strip ${HAVEQMP}),true)
  DHAVE_QMP = -DHAVE_QMP
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

ifeq ($(strip ${HAVEQOP}),true)
  DHAVE_QOP = -DHAVE_QOP
endif

DARCH = ${DHAVE_QMP} ${DHAVE_QIO} ${DHAVE_QDP} ${DHAVE_QOP}

##### Targets:
su3_spectrum::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_nhyp routines
include ../generic_nhyp/Make_template

# Rules for header files
include ../include/Make_template_qdp

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake

